@using NonFactors.Mvc.Grid;
@model IEnumerable<MantenanceProjetASPNET6.Models.SearchModel3>;
@{
    ViewData["Title"] = "Recherche3";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<head>
    <link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet" />
</head>

<div class="container-fluid">
    <h4 class="font-weight-bold text-center pt-3 pb-5">Recherche du 3ème année</h4>
    <div class="row mb-4">
        <div class="col-md-3">
            <select class="form-control" name="choix" id="criteria">
                <option value="Nom">Nom</option>
                <option value="prenom">Prenom</option>
                <option value="matricule">Matricule</option>
                <option value="cin">Cin</option>
                <option value="cne">Cne</option>
                <option value="lieu_naiss">Lieu de naissance</option>
                <option value="nationalite">Nationalité</option>
                <option value="email">Email</option>
                <option value="adress">Adress</option>
                <option value="ville">Ville</option>
                <option value="diplome">Diplome</option>
                <option value="etablissement">Etablissement</option>
                <option value="ville_dip">Ville diplome</option>
                <option value="filiere">Filière choisi</option>
                <option value="convoque">Convoqué</option>
                <option value="admis">Admis</option>
                <option value="date_inscription">Date de préinscription</option>
            </select>
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control" id="key" />
        </div>
        <div class="col-md-3">
            <select class="form-control" name="diplome" id="diplome">
                <option selected value="0">Choix Diplome</option>
                <option value="DUT">Dut</option>
                <option value="DEUG">Deug</option>
                <option value="Lic.pro-DUT">Liscence Professionnelle - DUT</option>
                <option value="Lic.pro-DEUG">Liscence Professionnelle - DEUG</option>
                <option value="Lic.fnd-DUT">Liscence Fondamentale - DUT</option>
                <option value="Lic.fnd-DEUG">Liscence Fondamentale - DEUG</option>
                <option value="Lic.st-DUT">Liscence ST - DUT</option>
                <option value="Lic.st-DEUG">Liscence ST - DEUG</option>
            </select>
        </div>

        <div class="col-md-3">
            <select class="form-control" name="filiere" id="filiere">
                <option selected value="0">Choix Filiere</option>
                <option value="Informatique">Informatique</option>
                <option value="GTR">GTR</option>
                <option value="Industriel">Industriel</option>
                <option value="GPMC">Gpmc</option>
            </select>
        </div>

        <div class="col-md-3 offset-2 mt-5 mb-4">
            <button id="search" class="btn btn-primary btn-block  py-2">Rechercher</button>
        </div>

        <div class="col-md-3 offset-2 mt-5 mb-4 ">
            <button id="export" onclick="exportTableToExcel('tbody')" class="btn btn-info btn-block py-2">Exporter vers Excel</button>
        </div>
    </div>

    <div class="grid-container">
        @(Html.Grid(Model)
            .Build(columns =>
            {
                // Ajout de la colonne Actions avec les boutons
                columns.Add().Titled("Delete").RenderedAs(model =>
                Html.Raw($@"
                    <button class='btn btn-danger deleteBtn' id='{model.Cne}'>Delete</button>
                    "));
                // Ajout de la colonne Actions avec les boutons
                columns.Add().Titled("Conforme").RenderedAs(model =>
                Html.Raw($@"
                    <button class='btn btn-info conformBtn' id='{model.Cne}'>Conforme</button>
                    "));
                columns.Add().Titled("Convoque").RenderedAs(model =>
                Html.Raw($@"
                    <button class='btn btn-info convoquerBtn' id='{model.Cne}'>Convoquer</button>
                    "));
                columns.Add(model => model.Nom).Titled("Nom").Sortable(true);
                columns.Add(model => model.Prenom).Titled("Prenom").Sortable(true);
                columns.Add(model => model.Photo).Titled("Photo").RenderedAs(model =>
                Html.Raw($"<img src='/candidatImages/{model.Photo}' style='width:50px; height:50px; border-radius:50%;' />"));
                columns.Add(model => model.Sexe).Titled("Sexe").Sortable(true);
                columns.Add(model => model.NoteBac).Titled("NoteBac").Sortable(true);
                columns.Add(model => model.Type_dip).Titled("Type de diplome").Sortable(true);
                columns.Add(model => model.Specialite).Titled("Specialite Diplôme");
                columns.Add(model => model.Diplome1).Titled("Diplome1");
                columns.Add(model => model.Note1).Titled("Note1");
                columns.Add(model => model.Note2).Titled("Note2");
                columns.Add(model => model.Note3).Titled("Note3");
                columns.Add(model => model.Note4).Titled("Note4");
                columns.Add(model => model.Dossier).Titled("Dossier");
                columns.Add(model => model.Convoque).Titled("Convoque").Sortable(true);
                columns.Add(model => model.Math).Titled("Math").Sortable(true);
                columns.Add(model => model.Specialite).Titled("Specialite");
                columns.Add(model => model.Filiere).Titled("Filiere").Sortable(true);
                columns.Add(model => model.Admis).Titled("Admis").Sortable(true);
                columns.Add(model => model.NonConforme).Titled("Non Conforme").Sortable(true);
            })
            .Pageable(pager =>
            {
                pager.RowsPerPage = 10;
            })
            .Filterable()
            .Sortable()
            .Id("tbody")
            )
    </div>
</div>

<!-- /.container-fluid -->


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="~/js/mvc-grid/mvc-grid.js"></script>
<script>
    document.querySelectorAll(".mvc-grid").forEach(Element => new MvcGrid(Element));

    //######################## Export to EXCELL #########
    function exportTableToExcel(tableID) {
        var downloadLink;
        var dataType = 'application/vnd.ms-excel';
        var tableSelect = document.getElementById(tableID);
        var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');
        // Specify file name
        filename = "ListeCandidats_Recherche_3A.xls";
        // Create download link element
        downloadLink = document.createElement("a");
        document.body.appendChild(downloadLink);
        if (navigator.msSaveOrOpenBlob) {
            var blob = new Blob(['\ufeff', tableHTML], {
                type: dataType
            });
            navigator.msSaveOrOpenBlob(blob, filename);
        } else {
            // Create a link to the file
            downloadLink.href = 'data:' + dataType + ', ' + tableHTML;
            // Setting the file name
            downloadLink.download = filename;
            //triggering the function
            downloadLink.click();
        }
    }
    //#########################################################
    $(document).ready(function () {
        //search button
        $("#search").click(function () {
            $.get("/Admin/SearchCriteria", { Criteria: $("#criteria").val(), Key: $("#key").val(), Diplome: $("#diplome").val(), Filiere: $("#filiere").val(), Niveau: 3 }, function (data) {
                $("#tbody").empty();
                $.each(data, function (index, row) {
                    var w=row.cne+".png";var u=row.photo;
                    var chemin="../../DiplomeScanne/+w";
                    $("#tbody").append("<tr><td><button class='btn btn-danger deleteBtn' id=" + row.cne + ">Delete</button></td><td><button class='btn btn-info conformBtn' id=" + row.cne + ">Conforme</button></td><td>" + row.nom + "</td><td>" + row.prenom + "</td><td><img  style=\"border-radius: 50%; width:50px; height:50px\"  src=\"/candidatImages/" + row.photo + "\"></img></td><td>" + row.sexe + "</td><td>" + row.noteBac + "</td><td>"  + row.type_dip + "</td><td>"+ row.speciali_dip +"</td><td><a href=\"/DiplomeScanne/" + w + "\">" + row.cne + "</a></td><td>" + row.note1 + "</td><td>" + row.note2 + "</td><td>" + row.note3 + "</td><td>" + row.note4 + "</td><td>" + row.dossier + "</td><td>" + row.convoque + "</td><td>" + row.math + "</td><td>" + row.specialite + "</td><td>" + row.filiere + "</td><td>" + row.admis + "</td><td>" + row.nonConforme  + "</td></tr>");
                });

            });
        });
        //delete button
        $(document).on("click", ".deleteBtn", function () {
            var id = $(this).attr("id");
            // Appel AJAX pour mettre à jour les données
               $.get("/Admin/deleteStudent", {cne: id,Niveau: 3 })
            .done(function (data) {
                window.location.reload();
            })
            .fail(function(xhr, status, error) {
                console.error("Erreur lors de la mise à jour:", error);
                alert("Une erreur est survenue lors de la mise à jour.");
            });

        });
           // Gestionnaire du click sur le bouton Conforme
            $(document).on("click", ".conformBtn", function () {
                var id = $(this).attr("id");

                // Appel AJAX pour mettre à jour les données
                $.get("/Admin/conformeStudent", {cne: id,Niveau: 3 })
                .done(function (data) {
                    // on recharge la page pour maintenir Grid.MVC
                    window.location.reload();
                    // Alternative: Si vous ne voulez pas recharger la page,
                    // vous pouvez faire un nouvel appel pour récupérer le grid mis à jour
                    /*
                    $.get("/Admin/VotreAction", function(gridHtml) {
                        $(".grid-container").html(gridHtml);
                        // Réinitialiser les événements Grid.MVC si nécessaire
                        if (typeof gridMvc !== 'undefined') {
                            gridMvc.reload();
                        }
                    });
                    */
                })
                .fail(function(xhr, status, error) {
                    console.error("Erreur lors de la mise à jour:", error);
                    alert("Une erreur est survenue lors de la mise à jour.");
                });
            });
        //convoquer button
           $(document).on("click", ".convoquerBtn", function () {
               var id = $(this).attr("id");
                      // Appel AJAX pour mettre à jour les données
                   $.get("/Admin/convoqueStudent", {cne: id,Niveau: 3 })
                .done(function (data) {
                    window.location.reload();
                })
                .fail(function(xhr, status, error) {
                    console.error("Erreur lors de la mise à jour:", error);
                    alert("Une erreur est survenue lors de la mise à jour.");
                });
           });
 });
</script>

